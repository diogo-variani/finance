version: '3.3'

services:

  # export DOCKER_HOST_IP=$(ip -4 addr show docker0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}')

  # mongodb://finance-user:finance-user@database.finance.com.br:80/finance
  database-server:
    image: 'mongo'
    container_name: 'database.finance.com.br'
    extra_hosts:
      - "host.docker.internal:$DOCKER_HOST_IP"    
    environment:
      - MONGO_INITDB_ROOT_USERNAME=finance-database-root
      - MONGO_INITDB_ROOT_PASSWORD=finance-database-root      
    ports:
      - 27017:27017
    volumes:
      - ./mongo/scripts:/docker-entrypoint-initdb.d
    networks:
      - finance-network

  ############################################################################
  #
  #   IDENTITY SERVER (Keycloak)
  #
  #   https://lists.jboss.org/pipermail/keycloak-user/2018-June/014337.html
  # 
  # Main Local URL: http://<container-ip>:8080/auth/realms/finance/.well-known/openid-configuration
  #                 http://identity.finance.com.br/auth/realms/finance/.well-known/openid-configuration
  #
  # Default command to export configuration:
  #   docker exec -it identity.finance.com.br /opt/jboss/keycloak/bin/standalone.sh -Dkeycloak.migration.action=export -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/tmp/keycloak-export 
  #     -Dkeycloak.migration.usersExportStrategy=SAME_FILE -Djboss.socket.binding.port-offset=100 -c standalone-ha.xml
  #
  # Default command to copy files from exported directory to the stack
  #   docker cp identity.finance.com.br:/tmp/keycloak-export/finance-realm.json /home/variani/dev/private/finance/infra/docker/keycloak/config/finance-realm.json
  #   docker cp identity.finance.com.br:/tmp/keycloak-export/finance-users-0.json /home/variani/dev/private/finance/infra/docker/keycloak/config/finance-users-0.json
  #   docker cp identity.finance.com.br:/tmp/keycloak-export/master-realm.json /home/variani/dev/private/finance/infra/docker/keycloak/config/master-realm.json
  #   docker cp identity.finance.com.br:/tmp/keycloak-export/master-users-0.json /home/variani/dev/private/finance/infra/docker/keycloak/config/master-users-0.json
  # 
  # Default user configuration:
  #   user: finance-admin
  #   pass: finance
  #
  #   user: finance-user
  #   pass: finance
  #
  # Default client secret: 685aa0fa-c830-465d-95ff-895c1830760a 
  #
  #############################################################################
  identity-server:
    image: 'jboss/keycloak'
    #container_name: 'finance-identity'
    container_name: 'identity.finance.com.br'
    extra_hosts:
      - "host.docker.internal:$DOCKER_HOST_IP"
    environment: 
      - KEYCLOAK_USER=finance-identity-root
      - KEYCLOAK_PASSWORD=finance-identity-root
      - PROXY_ADDRESS_FORWARDING=true
      #- KEYCLOAK_LOGLEVEL=DEBUG
      #- ROOT_LOGLEVEL=DEBUG
    ports:
      - 9080:9080
    volumes:      
      - ./keycloak/config:/tmp/keycloak/config
    command: -b 0.0.0.0 -Djboss.http.port=9080 -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/tmp/keycloak/config -Dkeycloak.migration.strategy=OVERWRITE_EXISTING
    networks:
      - finance-network

  backend-server:
    image: 'maven:3.6.3-openjdk-8'
    #container_name: 'finance-backend'
    container_name: 'backend.finance.com.br'
    extra_hosts:
      - "host.docker.internal:$DOCKER_HOST_IP" 
    ports:
      - 8080:8080
      - 5005:5005 #Remote debug port
    volumes:
      - ../../backend:/usr/src/finance
      - ~/.m2:/root/.m2
    networks:
      - finance-network
    working_dir: /usr/src/finance
    #links: 
    #  - identity-server:identity.finance.com.br
    depends_on:
      - database-server
      - identity-server
    command: >
       bash -c "mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=127.0.0.1:5005'"

      #command: >
      # bash -c "mvn spring-boot:run -Dspring-boot.run.jvmArguments='-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=*:5005'"

  proxy-server:
      image: nginx
      #image: openresty/openresty:alpine
      container_name: 'proxy.finance.com.br'
      extra_hosts:
        - "host.docker.internal:$DOCKER_HOST_IP"      
      ports:
        - 80:80
      volumes:        
        - ./nginx-backend/:/etc/nginx/:ro
      #depends_on:
      #  - backend-server
      networks:
        - finance-network
      command: ['nginx-debug', '-g', 'daemon off;']

  frontend-server:
      image: 'node'
      container_name: finance.com.br
      extra_hosts:
        - "host.docker.internal:$DOCKER_HOST_IP"          
      working_dir: /home/node/app
      volumes:
        - ../../frontend/:/home/node/app/
      ports:
        - 4200:4200
      networks:
        - finance-network
      #depends_on:
      # - proxy-server
      command: >
        bash -c "npm config set strict-ssl false
        && echo n | npm install -g @angular/cli@8.0.1
        && npm install
        && ng serve --host finance.com.br --public-host http://finance.com.br --port 4200 --disable-host-check"
  
networks:
  finance-network: